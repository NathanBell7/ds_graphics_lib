#include "sprites.hpp"
#include <nds.h>
#include <stdio.h>

#include "blue_head_down.h"

int main() {

  // Do this to initialize video on both screens. Find more about the different
  // modes on libnds.devkitpro.org
  videoSetMode(MODE_5_2D);
  videoSetModeSub(MODE_5_2D);

  // How to use the sprite controller:

  // Create a new instance of the controller
  SpriteController *spriteController = new SpriteController();

  // Initialize the display you want to use (a screen must be initialized to
  // display any sprites)
  spriteController->initializeDisplays(true, false);

  // set values so not using magic numbers
  int spriteX = 50;
  int spriteY = 50;
  int priority = 0;
  int paletteNumber = 0;
  bool isMainScreen = true;

  // Create the sprite using these values
  int spriteId = spriteController->createNewSprite(
      isMainScreen, SpriteSize_16x16, spriteX, spriteY, priority);

  // Add a palette(generated by grit) so it can be accessed by the sprite
  spriteController->addPalette(paletteNumber, isMainScreen, blue_head_downPal,
                               blue_head_downPalLen);

  // Set the sprite to use that specific palette
  spriteController->setSpritePaletteNumber(spriteId, isMainScreen,
                                           paletteNumber);

  // Set the sprite to use the tiles that have been generated by grit
  spriteController->setSpriteTiles(spriteId, isMainScreen, blue_head_downTiles,
                                   blue_head_downTilesLen);

  while (1) {
    scanKeys();

    if (keysHeld() & KEY_LEFT) {
      spriteX -= 5;
      // Change the x value of a specified sprite
      spriteController->setSpriteX(spriteId, isMainScreen, spriteX);
    }

    if (keysHeld() & KEY_RIGHT) {
      spriteX += 5;
      spriteController->setSpriteX(spriteId, isMainScreen, spriteX);
    }

    if (keysHeld() & KEY_UP) {
      spriteY -= 5;
      spriteController->setSpriteY(spriteId, isMainScreen, spriteY);
    }

    if (keysHeld() & KEY_DOWN) {
      spriteY += 5;
      spriteController->setSpriteY(spriteId, isMainScreen, spriteY);
    }

    spriteController->updateDisplays(true, true);
  }

  return 0;
}
